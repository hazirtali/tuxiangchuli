图像处理第一次作业
艾再提艾力·米吉提
3017218150
本次作业实现为使用三种不同颜色的线绘制[0,2pi]区间内的正弦，余弦和平方函数图像
实现思路：首先绘制一个背景板，设置x轴和y轴的每一段距离所代表的精度 绘制图像就是通过循环设置图像像素的大小进行绘制图像。（可能并未成功实现数组实现的方法，没有找到python怎么实现对数组数值的设置来进行图像的生成）这道题中我们需要用红、绿、蓝三种颜色的线分别绘制正弦、余弦以 及y = x 2函数在[0, π]区间内的图像。我们不能直接采用现有的函数如pyplot.plot直 接绘制，否则就失去了作业练习的意义。因为我采用双重循环一个个分别 绘制单个的像素点的方式来画图。具体思路是：首先明确一张m ∗ n的图 片本质上可以看成是一个m ∗ n的二维数组，其中每一个元素是四元组， 用(R,G,B,A)来表示。元组中R、G、B分别代表了RGB颜色体系中的颜色 值，取值范围为0-255，A为透明度值，取值范围为0-1。
### 代码

```python
# !/usr/bin/zhb
# -*- coding = utf-8 -*-

from PIL import Image
import math

def generateFigure(imgW,imgH):
    img = Image.new("RGB",(imgW,imgH))
    background = (255,255,255,1)

    for i in range(imgW):
        for j in range(imgH):
            img.putpixel((i,j),background)

    red_line = (255,0,0,1)
    green_line = (0,255,0,1)
    blue_line = (0,0,255,1)

    x_width = (math.pi * 2) / imgW
    y_width =  imgH/4
    #正弦
    for i in range(imgW):
        y_value = int(math.sin(i*x_width)*y_width+y_width)
        img.putpixel((i,y_value),red_line)

    #余弦
    for i in range(imgW):
        y_value = int(math.cos(i*x_width)*y_width+y_width)
        img.putpixel((i,y_value),green_line)

    y_width2 = imgH/40
    #平方
    for i in range(imgW):
        y_value = -int(y_width2*math.pow(i*x_width,2))
        img.putpixel((i,y_value),blue_line)

    img.show()
    img.save("generateFigure.png")


generateFigure(1024,768)
`` 
